# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'num_generator.ui'
#
# Created by: PyQt5 UI code num_generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtGui import QFont
import random

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setWindowIcon(QtGui.QIcon('icongenerator.png'))
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(250, 120)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(115, 90, 100, 16))
        self.label.setText("")
        self.label.setFont(QFont('Times', 18))
        self.label.setObjectName("label")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(75, 50, 100, 32))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setStyleSheet(
            "color: blue; "
            "background-color: white; "
            "border-style: outset; "
            "border-width: 2px; "
            "border-radius: 10px; "
            "border-color: darkgray; "
            "font: bold 14px;")

        self.line_edit1 = QtWidgets.QLineEdit(self.centralwidget)
        self.line_edit1.setGeometry(30, 20, 71, 20)
        self.line_edit1.setStyleSheet(
            "border: 2px solid gray; "
            "border-radius: 3px; "
            "background: white; "
            "selection-background-color: darkgray;")

        self.line_edit2 = QtWidgets.QLineEdit(self.centralwidget)
        self.line_edit2.setGeometry(150, 20, 71, 20)
        self.line_edit2.setStyleSheet(
            "border: 2px solid gray; "
            "border-radius: 3px; "
            "background: white; "
            "selection-background-color: darkgray;")

        MainWindow.setCentralWidget(self.centralwidget)
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Random Generator"))
        self.pushButton.setText(_translate("MainWindow", "Generate!"))
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.add_functions()


    def add_functions(self):
        self.pushButton.clicked.connect(self.generate)

    def generate(self):
        fi = self.line_edit1.text()
        sec = self.line_edit2.text()

        is_adv_digit = lambda x: x.isdigit() if x[:1] != '-' else x[1:].isdigit() #функция проверки на валидность отрицательных чисел

        if (is_adv_digit(fi) == True) and (is_adv_digit(sec) == True):
            minval = int(fi)
            maxval = int(sec)
            if (minval < maxval):
                result = str(random.randint(minval, maxval))
                self.label.setText(result)
            elif (minval > maxval):
                result = str(random.randint(maxval, minval))
                self.label.setText(result)

        elif (is_adv_digit(fi) == False) or (is_adv_digit(sec) == False):
            error = QMessageBox()
            error.setWindowTitle("Warning")
            error.setText("Invalid Value")
            error.setIcon(QMessageBox.Warning)
            error.setStandardButtons(QMessageBox.Ok)
            error.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
